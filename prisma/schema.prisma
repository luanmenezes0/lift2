datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Post {
  slug     String @id
  title    String
  markdown String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id      Int    @id @default(autoincrement())
  name    String
  address String

  buildingSites BuildingSite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BuildingSite {
  id      Int    @id @default(autoincrement())
  name    String
  address String

  client   Client @relation(fields: [clientId], references: [id])
  clientId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deliveries       Delivery[]
  scaffoldingCount Int?  @default(0)
  propsCount       Int?  @default(0)
}

model Delivery {
  id Int @id @default(autoincrement())

  buildingSite   BuildingSite @relation(fields: [buildingSiteId], references: [id])
  buildingSiteId Int

  scaffoldingCount        Int?  @default(0)
  scaffoldingDeliveryType Int? 
  propsCount              Int?
  propsDeliveryType       Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rentable {
  id      Int    @id @default(autoincrement())
  name    String
  count   Int?   @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}